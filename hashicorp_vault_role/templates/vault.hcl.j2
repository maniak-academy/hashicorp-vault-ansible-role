listener "tcp" {
{% if vault_tls_cert_file is defined and vault_tls_key_file is defined %}
{% set proto="https" %}
  address                  = "{{ vault_client_addr }}:{{ vault_http_port }}"
  tls_cert_file            = "{{ vault_tls_directory }}/{{ vault_tls_cert_file | basename }}"
  tls_key_file             = "{{ vault_tls_directory }}/{{ vault_tls_key_file  | basename }}"
  tls_disable_client_certs = "{{ vault_tls_disable_client_certs }}"
{% else %}
{% set proto="http" %}
  address     = "{{ vault_client_addr }}:{{ vault_http_port }}"
  tls_disable = true
{% endif %}
}

{% if vault_storage_backend == "integrated" %}
disable_mlock = true

storage "raft" {
  path    = "{{ vault_data_directory }}/raft"
  node_id = "{{ ansible_fqdn }}"
{% if cloud == "gcp" %}
  retry_join {
    auto_join             = "provider=gce region={{ gcp_region }} tag_value={{ gcp_tag }}"
    auto_join_scheme      = "https"
{% if vault_tls_ca_cert_file is defined %}
    leader_ca_cert_file   = "{{ vault_tls_directory }}/{{ vault_tls_ca_cert_file | basename }}"
{% endif %}
    leader_tls_servername = "{{ ansible_fqdn }}"
  }
{% else %}
{% for vault_server in groups['vault'] %}
  retry_join {
    leader_api_addr         = "{{ proto }}://{{ vault_server }}:{{ vault_http_port }}"
{% if proto == "https" %}
{% if vault_tls_ca_cert_file is defined %}
    leader_ca_cert_file     = "{{ vault_tls_directory }}/{{ vault_tls_ca_cert_file | basename }}"
{% endif %}
    leader_client_cert_file = "{{ vault_tls_directory }}/{{ vault_tls_cert_file | basename }}"
    leader_client_key_file  = "{{ vault_tls_directory }}/{{ vault_tls_key_file  | basename }}"
{% endif %}
  }
{% endfor %}
{% endif %}
}
{% elif vault_storage_backend == "consul" %}
disable_mlock = false

storage "consul" {
  address = "127.0.0.1:{{ consul_http_port }}"
  scheme  = "{{ consul_scheme }}"
  path    = "{{ consul_vault_kv_path }}"
{% if consul_vault_acl_token is defined %}
  token   = "{{ consul_vault_acl_token }}"
{% endif %}
{% if consul_tls_cert_file is defined and consul_tls_key_file is defined %}
{% if consul_tls_ca_file is defined %}
  tls_ca_file     = "{{ consul_tls_directory }}/{{ consul_tls_ca_file | basename }}"
{% endif %}
  tls_cert_file   = "{{ consul_tls_directory }}/{{ consul_tls_cert_file | basename }}"
  tls_key_file    = "{{ consul_tls_directory }}/{{ consul_tls_key_file | basename }}"
  tls_skip_verify = "{{ consul_tls_skip_verify }}"
{% endif %}
}
{% else %}
storage "file" {
  path = "{{ vault_data_directory }}/data"
}
{% endif %}

{% if vault_seal_type == "gcpkms" %}
seal "gcpckms" {
  project     = "{{ vault_seal_gcp_project }}"
  region      = "{{ vault_seal_gcp_region }}"
  key_ring    = "{{ vault_seal_gcp_key_ring }}"
  crypto_key  = "{{ vault_seal_gcp_crypto_key }}"
}
{% elif vault_seal_type == "awskms" %}
seal "awskms" {
  region     = "{{ vault_seal_aws_region }}"
  access_key = "{{ vault_seal_aws_access_key }}"
  secret_key = "{{ vault_seal_aws_secret_key }}"
  kms_key_id = "{{ vault_seal_aws_kms_key_id }}"
{% if vault_seal_aws_endpoint is defined %}
  endpoint   = "{{ vault_seal_aws_endpoint }}"
{% endif %}
}
{% elif vault_seal_type == "pkcs11" %}
seal "pkcs11" { 
  lib            = "{{ vault_hsm_crypto_library }}"
  slot           = "{{ vault_hsm_slot }}"
  pin            = "{{ vault_hsm_pin }}"
  generate_key   = "{{ vault_hsm_generate_key }}"
  key_label      = "{{ vault_hsm_key_label }}"
  hmac_key_label = "{{ vault_hsm_hmac_key_label }}"
}
{% endif %}

{% if vault_telemetry is defined %}
telemetry {
{% for item in vault_telemetry %}
  {{ item }} = {{ vault_telemetry[item] }}
{% endfor %}
}
{% endif %}

{% if vault_enable_plugins %}
plugin_directory = "{{ vault_plugin_directory }}"
{% endif %}

{% if vault_license_file is defined %}
license_path = "{{ vault_data_directory }}/{{ vault_license_file | basename }}"
{% endif %}

api_addr      = "{{ proto }}://{{ ansible_fqdn }}:{{ vault_http_port }}"
cluster_addr  = "{{ proto }}://{{ ansible_fqdn }}:{{ vault_api_port }}"
ui            = "{{ vault_ui_enable }}"